// /Users/apichet/Downloads/cheetah-insurance-app/src/pages/Profile.jsx
import React, { useEffect, useState, useMemo } from "react";
import "../assets/styles/Profile.css";
import { useNavigate } from "react-router-dom";
import {
  fetchUserProfile,
  logoutUser,
  uploadProfilePicture,
} from "../api/userService";
import {
  fetchCustomerDocuments,
  uploadDocument,
  deleteDocument,
} from "../api/documentService";
import { fetchOrderHistory } from "../api/orderService";

import ProfilePicture from "../components/ProfilePicture";
import UserDetails from "../components/UserDetails";
import DocumentsSection from "../components/DocumentsSection";
import OrderHistorySection from "../components/OrderHistorySection";
import ProfileActions from "../components/ProfileActions";
import { REQUIRED_DOCUMENTS } from "../constants/documents";

const DEFAULT_PROFILE_PICTURE = "/images/default-profile.png?v=1";
const LOCAL_STORAGE_KEY = "profile_picture_url";



// Generic data fetcher
const fetchData = async (fetchFn, setData, setLoading, setError, fallbackMessage, fallbackData = null) => {
  setLoading?.(true);
  try {
    const data = await fetchFn();
    setData(data || fallbackData);
    setError("");
  } catch (err) {
    const message = err?.message || "Unknown error";
    if (message.includes("currently being fetched")) return;
    console.error(`‚ùå ${fallbackMessage}:`, message);
    setError(fallbackMessage);
    if (fallbackData) setData(fallbackData);
  } finally {
    setLoading?.(false);
  }
};

const Profile = () => {
  const [user, setUser] = useState(null);
  
  const [documents, setDocuments] = useState([]);
  const [orderHistory, setOrderHistory] = useState([]);

  const [errorProfile, setErrorProfile] = useState("");
  const [errorDocuments, setErrorDocuments] = useState("");
  const [errorOrders, setErrorOrders] = useState("");

  const [loadingProfile, setLoadingProfile] = useState(false);
  const [loadingDocuments, setLoadingDocuments] = useState(false);
  const [loadingOrders, setLoadingOrders] = useState(false);

  const [uploading, setUploading] = useState(false);
  const [profilePictureUploading, setProfilePictureUploading] = useState(false);

  const navigate = useNavigate();

  // ‚úÖ Profile picture (will be auto-refreshed due to ?t=...)
  // ‚úÖ Profile picture (will be auto-refreshed due to ?t=...)
  const profilePictureUrl = useMemo(() => {
    const stored = localStorage.getItem("profile_picture_url");
    const path = user?.customer?.profile_picture || stored;
  
    const base = process.env.REACT_APP_API_BASE_URL || window.location.origin;
  
    if (!path) return DEFAULT_PROFILE_PICTURE;
    if (path.startsWith("http")) return path;
    return `${base}${path}`;
  }, [user?.customer?.profile_picture]);
  

  
  

  useEffect(() => {
    fetchData(fetchUserProfile, setUser, setLoadingProfile, setErrorProfile, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ");
  }, []);

  useEffect(() => {
    const cid = user?.customer?.customer_id;
    if (!cid) return;

    fetchData(() => fetchCustomerDocuments(cid), setDocuments, setLoadingDocuments, setErrorDocuments, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÑ‡∏î‡πâ");
    fetchData(() => fetchOrderHistory(cid), setOrderHistory, setLoadingOrders, setErrorOrders, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ");
  }, [user]);




  // ‚úÖ Upload ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö (‡πÅ‡∏ö‡∏ö sync ‡∏Å‡∏±‡∏ö backend)/Users/apichet/Downloads/cheetah-insurance-app/src/pages/Profile.jsx
  // ‚úÖ Upload ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö (‡πÅ‡∏ö‡∏ö sync ‡∏Å‡∏±‡∏ö backend)
  // ‚úÖ Upload ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö (‡πÅ‡∏ö‡∏ö sync ‡∏Å‡∏±‡∏ö backend)
  const handleUploadDocument = async (e, docType) => {
    const file = e.target.files?.[0];
    const customer_id = user?.customer?.customer_id;

    if (!file || !docType || !customer_id) {
      alert("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÑ‡∏î‡πâ");
      return;
    }

    setUploading(true);

    try {
      const response = await uploadDocument({
        customer_id,
        document_type: docType,
        file,
      });

      if (response?.document_id) {
        setDocuments((prev) => [...prev, response]);
        console.info("‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", response);
      } else {
        console.warn("‚ö†Ô∏è ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤");
        alert("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£");
      }
    } catch (error) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£:", error?.response?.data || error.message);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
    } finally {
      setUploading(false);
    }
  };

  


  

  // ‚úÖ ‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
  const handleDeleteDocument = async (id) => {
    if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ô‡∏µ‡πâ?")) return;
    try {
      await deleteDocument(id);
      setDocuments((prev) => prev.filter((d) => d.document_id !== id));
    } catch (err) {
      console.error("‚ùå Delete document failed:", err.message);
      alert("‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
    }
  };

  // ‚úÖ Upload ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  // ‚úÖ Upload ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á "file" ‡πÅ‡∏•‡∏∞ "profile_picture" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô)
  const handleUploadProfilePicture = async (file) => {
    if (!file) return;

    setProfilePictureUploading(true);
    try {
      const formData = new FormData();

      // üõ°Ô∏è ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏ô‡πà: ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ field "file" ‡πÅ‡∏•‡∏∞ "profile_picture"
      formData.append("file", file);
      formData.append("profile_picture", file); 

      const res = await uploadProfilePicture(formData);

      if (res?.profile_picture) {
        localStorage.setItem(LOCAL_STORAGE_KEY, res.profile_picture); // ‚¨ÖÔ∏è ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å URL
        setUser((prev) => ({
          ...prev,
          customer: {
            ...prev.customer,
            profile_picture: res.profile_picture,
          },
        }));
            
      } else {
        console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ 'profile_picture' ‡πÉ‡∏ô response");
        alert("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö URL ‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö");
      }
    } catch (err) {
      console.error("‚ùå Upload profile picture failed:", err?.response?.data || err.message);
      alert("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
    } finally {
      setProfilePictureUploading(false);
    }
  };



  const handleLogout = () => {
    if (window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö?")) {
      logoutUser();
      navigate("/login");
    }
  };

  return (
    <div className="profile-page">
      {/* ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß */}
      <h2>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</h2>
  
      {/* ‚úÖ ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
      <section className="profile-section">
        <ProfilePicture
          profilePictureUrl={profilePictureUrl}
          handleUploadProfilePicture={handleUploadProfilePicture}
          profilePictureUploading={profilePictureUploading}
        />
      </section>
  
      {/* ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
      <section className="profile-section">
        <UserDetails
          user={user}
          handleEditProfile={() => navigate("/edit-profile")}
        />
      </section>
  
      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
      <section className="profile-section">
        <ProfileActions
          className="profile-actions"
          handlePrepareInsuranceInfo={() => navigate("/prepare-insurance-info")}
          handleReportClaim={() => navigate("/report-claim")}
          handleReviewInsurance={() => navigate("/review-insurance")}
        />
      </section>
  
      {/* ‚úÖ ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */}
      <section className="profile-section">
        <DocumentsSection
          documents={documents}
          loadingDocuments={loadingDocuments}
          uploading={uploading}
          errorDocuments={errorDocuments}
          handleUploadDocument={handleUploadDocument}
          handleDeleteDocument={handleDeleteDocument}
          REQUIRED_DOCUMENTS={REQUIRED_DOCUMENTS}
          API_BASE_URL={process.env.REACT_APP_API_BASE_URL || window.location.origin}
          checkDocumentStatus={(type) =>
            documents.some((doc) => doc.document_type === type)
          }
        />
  
        {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
        <div style={{ textAlign: "center", marginTop: "1.5rem" }}>
          <button
            className="view-documents-button"
            onClick={() => navigate("/uploaded-documents")}
          >
            üìÇ ‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          </button>
        </div>
      </section>
  
      {/* ‚úÖ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
      <section className="profile-section">
        <OrderHistorySection
          orderHistory={orderHistory}
          loadingOrders={loadingOrders}
          errorOrders={errorOrders}
        />
      </section>
  
      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏° logout */}
      <section className="profile-section" style={{ textAlign: "center" }}>
        <button className="logout-button" onClick={handleLogout}>
          üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
        </button>
      </section>
    </div>
  );
  
  
};

export default Profile;
