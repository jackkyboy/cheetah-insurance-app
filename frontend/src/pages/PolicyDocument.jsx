// /Users/apichet/Downloads/cheetah-insurance-app/src/pages/PolicyDocument.jsx
import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import "../assets/styles/PolicyDocument.css";
import { getInsurancePreparation } from "../api/insuranceService";
import { jwtDecode } from "jwt-decode"; // Corrected import

const PolicyDocument = () => {
  const [insuranceData, setInsuranceData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchInsuranceData = async () => {
      try {
        const token = localStorage.getItem("authToken");

        if (!token) {
          setError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
          navigate("/login");
          return;
        }

        // Decode the JWT token to get the user_id
        const decoded = jwtDecode(token);
        const userId = decoded?.user_id;

        if (!userId) {
          throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô");
        }

        console.log("üîç Fetching insurance preparation for user_id:", userId);
        const response = await getInsurancePreparation(userId);

        if (!response || !response.data) {
          throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ");
        }

        setInsuranceData(response.data);
        console.log("‚úÖ Insurance preparation fetched successfully:", response.data);
      } catch (err) {
        console.error("‚ùå Error fetching insurance preparation:", err.message);
        setError(err.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå");
      } finally {
        setLoading(false);
      }
    };

    fetchInsuranceData();
  }, [navigate]);

  // Helper function to render field values
  const renderField = (label, value) => (
    <p>
      <strong>{label}:</strong> {value || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}
    </p>
  );

  if (loading) {
    return <div className="loading-message">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
  }

  if (error) {
    return (
      <div className="error-message">
        ‚ùå {error}
        <div className="button-group">
          <button className="btn back-btn" onClick={() => navigate("/")}>
            ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
          </button>
          <button className="btn retry-btn" onClick={() => window.location.reload()}>
            ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="policy-document">
      <h1 className="document-title">‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå</h1>

      {/* Section: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏≠‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
      <section className="section">
        <h2>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏≠‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô</h2>
        {renderField("‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤", insuranceData?.insured_info?.title)}
        {renderField(
          "‡∏ä‡∏∑‡πà‡∏≠",
          `${insuranceData?.insured_info?.first_name || ""} ${insuranceData?.insured_info?.last_name || ""}`.trim()
        )}
        {renderField("‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô", insuranceData?.insured_info?.id_card)}
        {renderField("‡∏≠‡∏µ‡πÄ‡∏°‡∏•", insuranceData?.insured_info?.email)}
      </section>

      {/* Section: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå */}
      <section className="section">
        <h2>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå</h2>
        {renderField("‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ", insuranceData?.motor_info?.license_no)}
        {renderField("‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏£‡∏ñ", insuranceData?.motor_info?.make)}
        {renderField("‡∏£‡∏∏‡πà‡∏ô‡∏£‡∏ñ", insuranceData?.motor_info?.model)}
        {renderField("‡∏õ‡∏µ", insuranceData?.motor_info?.year)}
      </section>

      {/* Section: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå */}
      <section className="section">
        <h2>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå</h2>
        {renderField("‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏û‡∏Ñ‡πÄ‡∏Å‡∏à", insuranceData?.policy_info?.package_code)}
        {renderField(
          "‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢‡∏£‡∏ß‡∏°",
          insuranceData?.policy_info?.total_premium
            ? insuranceData.policy_info.total_premium.toLocaleString("th-TH", {
                style: "currency",
                currency: "THB",
              })
            : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"
        )}
      </section>

      {/* Buttons */}
      <div className="button-group">
        <button className="btn back-btn" onClick={() => navigate("/")}>
          ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
        </button>
        <button className="btn profile-btn" onClick={() => navigate("/profile")}>
          ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
        </button>
      </div>
    </div>
  );
};

export default PolicyDocument;
