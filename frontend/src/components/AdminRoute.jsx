// /Users/apichet/Downloads/cheetah-insurance-app/src/components/AdminRoute.jsx
import React from "react";
import { Navigate, useLocation } from "react-router-dom";
import { useAuth } from "../context/AuthContext";

const AdminRoute = ({ children }) => {
  const { user, authToken, role, isAuthInitializing, isAdmin } = useAuth();
  const location = useLocation();

  console.log("üîç [AdminRoute] Checking Admin Access:", { user, authToken, role, isAuthInitializing, isAdmin });

  // ‚è≥ ‡∏ñ‡πâ‡∏≤ AuthContext ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡∏π‡πà ‡∏£‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á Redirect
  if (isAuthInitializing) {
    console.warn("‚è≥ [AdminRoute] Authentication is initializing... Waiting.");
    return (
      <div style={{ textAlign: "center", marginTop: "20%" }}>
        <h2>Loading...</h2>
        <p>Please wait...</p>
      </div>
    );
  }

  // ‚ùå ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Token ‡∏´‡∏£‡∏∑‡∏≠ Token ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ Redirect ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Login
  if (!authToken) {
    console.error("‚ùå [AdminRoute] Unauthorized! Redirecting to /admin/login");
    return <Navigate to="/admin/login" state={{ from: location }} replace />;
  }

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Admin ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  if (role !== "admin" || !isAdmin) {
    console.warn("üö´ [AdminRoute] User is not an admin. Redirecting to /");
    return <Navigate to="/" replace />;
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏≠‡πÄ‡∏Ñ ‡πÉ‡∏´‡πâ Render ‡∏´‡∏ô‡πâ‡∏≤ Admin
  console.log("‚úÖ [AdminRoute] Access Granted! Rendering Admin Page.");
  return children;
};

export default AdminRoute;
