/*/Users/apichet/Downloads/cheetah-insurance-app/src/api/mandatoryInsuranceMapping.js */
// JSON Data - Insurance Rates
// JSON Data - Insurance Rates
const mandatoryInsuranceMapping = {
    motorcycles: {
        below_75cc: { personal: 300, commercial: 350 },
        "75cc_to_125cc": { personal: 400, commercial: 450 },
        "125cc_to_150cc": { personal: 500, commercial: 550 },
        above_150cc: { personal: 600, commercial: 650 },
    },
    electricVehicles: {
        personal_ev: { personal: 1900, commercial: 2500 },
        commercial_ev: { personal: 2500, commercial: 3500 },
    },
    passengerCars: {
        up_to_7_seats_bkk: { personal: 600, commercial: 1900 },
        up_to_7_seats_upcountry: { personal: 1200, commercial: 2500 },
        above_7_seats_up_to_15: { personal: 1100, commercial: 2320 },
        above_15_seats: { personal: 2050, commercial: 3480 },
    },
    trucks: {
        up_to_3_tons: { personal: 900, commercial: 1760 },
        "3_to_6_tons": { personal: 1400, commercial: 2300 },
        "6_to_12_tons": { personal: 1310, commercial: 2000 },
        above_12_tons: { personal: 1600, commercial: 2700 },
    },
    trailers: {
        general_trailer: { personal: 2000, commercial: 3200 },
    },
};

// ‚úÖ Function to determine vehicle type
// ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á determineVehicleType ‡πÉ‡∏´‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏∂‡πâ‡∏ô
// ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö determineVehicleType ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
export const validateInputData = (seatingCapacity, engineCC, weight, usage, area, isElectric) => {
    console.log(
        "üîç [validateInputData] Raw Input:",
        "| Seating Capacity:", seatingCapacity,
        "| Engine CC:", engineCC,
        "| Weight:", weight,
        "| Usage:", usage,
        "| Area:", area,
        "| Electric:", isElectric
    );

    // üö® ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    if (isNaN(seatingCapacity) || seatingCapacity <= 0) {
        console.warn("‚ö†Ô∏è Seating Capacity ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç:", seatingCapacity);
        seatingCapacity = null;
    }

    if (isNaN(engineCC) || engineCC <= 0) {
        console.warn("‚ö†Ô∏è Engine CC ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç:", engineCC);
        engineCC = null;
    }

    if (isNaN(weight) || weight <= 0 || weight >= 50) {
        if (weight >= 1900) {
            console.warn("‚ö†Ô∏è Weight ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô Model Year (‡∏õ‡∏µ‡∏£‡∏ñ) ‡πÅ‡∏ó‡∏ô:", weight);
        } else {
            console.warn("‚ö†Ô∏è Weight ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:", weight);
        }
        weight = null;
    }

    if (!usage) {
        console.warn("‚ö†Ô∏è Usage ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô '‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•'");
        usage = "‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•";
    }

    if (!area) {
        console.warn("‚ö†Ô∏è Area ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'");
        area = "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø";
    }

    return { seatingCapacity, engineCC, weight, usage, area, isElectric };
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤
export const normalizeInputData = (seatingCapacity, engineCC, weight, usage, area, isElectric) => {
    console.log(
        "üîç [normalizeInputData] Raw Input:",
        "| Seating Capacity:", seatingCapacity,
        "| Engine CC:", engineCC,
        "| Weight:", weight,
        "| Usage:", usage,
        "| Area:", area,
        "| Electric:", isElectric
    );

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Seating Capacity ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    let parsedSeatingCapacity = parseInt(seatingCapacity, 10);
    if (isNaN(parsedSeatingCapacity) || parsedSeatingCapacity <= 0) {
        console.warn("‚ö†Ô∏è Seating Capacity ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤:", seatingCapacity);
        parsedSeatingCapacity = null;
    }

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Engine CC ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    let parsedEngineCC = parseInt(engineCC, 10);
    if (isNaN(parsedEngineCC) || parsedEngineCC <= 0) {
        console.warn("‚ö†Ô∏è Engine CC ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤:", engineCC);
        parsedEngineCC = null;
    }

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Weight ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Model Year
    let parsedWeight = parseInt(weight, 10);
    let modelYear = null;
    if (!isNaN(parsedWeight)) {
        const currentYear = new Date().getFullYear();
        if (parsedWeight >= 1900 && parsedWeight <= currentYear) {
            console.warn("‚ö†Ô∏è Weight ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå‡πÅ‡∏ó‡∏ô:", weight);
            modelYear = parsedWeight;
            parsedWeight = null;
        } else if (parsedWeight > 50) {
            console.warn("‚ö†Ô∏è Weight ‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:", weight);
            parsedWeight = null;
        }
    } else {
        parsedWeight = null;
    }

    // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ Usage ‡πÅ‡∏•‡∏∞ Area
    if (!usage) {
        console.warn("‚ö†Ô∏è Usage ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô '‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•'");
        usage = "‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•";
    }

    if (!area) {
        console.warn("‚ö†Ô∏è Area ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'");
        area = "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø";
    }

    return { 
        seatingCapacity: parsedSeatingCapacity, 
        engineCC: parsedEngineCC, 
        weight: parsedWeight, 
        modelYear, 
        usage, 
        area, 
        isElectric 
    };
};





// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
export const determineVehicleType = (seatingCapacity, engineCC, weight, modelYear, isElectric) => {
    console.log(
      "üîç [determineVehicleType] Processed Input:",
      "| Seating Capacity:", seatingCapacity,
      "| Engine CC:", engineCC,
      "| Weight:", weight,
      "| Model Year:", modelYear,
      "| Electric:", isElectric
    );

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (isElectric) return "electricVehicles";

    // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠
    if (!seatingCapacity && !engineCC && !weight) {
        console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ‡∏à‡∏≤‡∏Å Model Year ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß");
        return "unknown";
    }

    // ‚úÖ ‡πÉ‡∏ä‡πâ Engine CC ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
    if (engineCC !== null) {
        if (engineCC <= 150) return "motorcycles"; // ‡∏£‡∏ñ‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå
        if (engineCC > 150 && engineCC <= 2000) return "passengerCars"; // ‡∏£‡∏ñ‡πÄ‡∏Å‡πã‡∏á
        return "trucks"; // ‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å
    }

    // ‚úÖ ‡πÉ‡∏ä‡πâ Seating Capacity ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
    if (seatingCapacity !== null) {
        if (seatingCapacity <= 7) return "passengerCars"; // ‡∏£‡∏ñ‡πÄ‡∏Å‡πã‡∏á
        if (seatingCapacity > 7 && seatingCapacity <= 15) return "minibuses"; // ‡∏£‡∏ñ‡∏°‡∏¥‡∏ô‡∏¥‡∏ö‡∏±‡∏™
        return "buses"; // ‡∏£‡∏ñ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà
    }

    // ‚úÖ ‡πÉ‡∏ä‡πâ Weight ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
    if (weight !== null) {
        if (weight <= 3) return "lightTrucks"; // ‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å‡πÄ‡∏•‡πá‡∏Å
        if (weight > 3 && weight <= 12) return "mediumTrucks"; // ‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á
        return "heavyTrucks"; // ‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà
    }

    console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ‡πÑ‡∏î‡πâ");
    return "unknown";
};



// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢
export const getInsuranceDetails = (seatingCapacity, engineCC, weight, usage, area, isElectric) => {
    console.log(
      "üîç [getInsuranceDetails] Start | Raw Input:",
      "| Seating Capacity:", seatingCapacity,
      "| Engine CC:", engineCC,
      "| Weight:", weight,
      "| Usage:", usage,
      "| Area:", area,
      "| Electric:", isElectric
    );

    // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    const validatedData = normalizeInputData(seatingCapacity, engineCC, weight, usage, area, isElectric);
    seatingCapacity = validatedData.seatingCapacity;
    engineCC = validatedData.engineCC;
    weight = validatedData.weight;
    const modelYear = validatedData.modelYear;
    usage = validatedData.usage;
    area = validatedData.area;
    isElectric = validatedData.isElectric;

    // ‚úÖ ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
    const vehicleType = determineVehicleType(seatingCapacity, engineCC, weight, modelYear, isElectric);
    console.log("‚ÑπÔ∏è [getInsuranceDetails] Determined Vehicle Type:", vehicleType);

    if (vehicleType === "unknown") {
        return { error: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ‡πÑ‡∏î‡πâ" };
    }

    return { vehicleType, seatingCapacity, engineCC, weight, modelYear, usage, area };
};
