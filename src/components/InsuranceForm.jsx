import React, { useState } from "react";
import { useNavigate } from "react-router-dom"; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
import "../assets/styles/InsuranceForm.css";

const InsuranceForm = () => {
  const [formData, setFormData] = useState({
    insured: {
      title: "",
      firstName: "",
      lastName: "",
      idNumber: "",
      birthDate: "",
      age: "",
      mobile: "",
      email: "",
    },
    address: {
      homeNo: "",
      moo: "",
      mooBarn: "",
      soi: "",
      road: "",
      tambol: "",
      amphur: "",
      province: "",
      zipCode: "",
    },
    invoice: {
      title: "",
      firstName: "",
      lastName: "",
      homeNo: "",
      moo: "",
      mooBarn: "",
      soi: "",
      road: "",
      tambol: "",
      amphur: "",
      province: "",
      zipCode: "",
    },
    beneficiary: {
      name: "",
      relationship: "",
    },
    vehicle: {
      licenseNo: "",
      licenseProvince: "",
      chassisNo: "",
      engineNo: "",
      make: "",
      spec: "",
      model: "",
      modelYear: "",
      registrationYear: "",
      cc: "",
      seat: "",
      weight: "",
    },
    policy: {
      packageCode: "",
      voluntaryClassCode: "",
      voluntaryClassName: "",
      voluntaryCode: "",
      policyType: "",
      coverOD: "",
      netGrossPremium: "",
      duty: "",
      tax: "",
      totalPremium: "",
      isTakaful: "N",
      isMuslim: "N",
    },
    driver: {
      driverTypeFlag: "N",
      driverAmount: 0,
      driver1: {
        title: "",
        firstName: "",
        lastName: "",
        birthDate: "",
        age: "",
        idNumber: "",
        licenseNo: "",
      },
      driver2: {
        title: "",
        firstName: "",
        lastName: "",
        birthDate: "",
        age: "",
        idNumber: "",
        licenseNo: "",
      },
    },
  });

  const [visibleSections, setVisibleSections] = useState({
    insured: true,
    address: false,
    invoice: false,
    beneficiary: false,
    vehicle: false,
    policy: false,
    driver: false,
  });

  const navigate = useNavigate(); // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤

  const toggleSection = (section) => {
    setVisibleSections((prev) => ({
      ...prev,
      [section]: !prev[section],
    }));
  };

  const handleInputChange = (e, section, key) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [section]: {
        ...prev[section],
        [key || name]: value,
      },
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("Form submitted:", formData);
    alert("üéâ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
  };

  const handleViewDocument = () => {
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á PolicyDocument.jsx
    navigate("/policy-document", { state: { formData } });
  };

  return (
    <div className="insurance-form">
      <h1>‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå</h1>
      <form onSubmit={handleSubmit}>
        {/* Section: ‡∏ú‡∏π‡πâ‡πÄ‡∏≠‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
        <section>
          <h2 onClick={() => toggleSection("insured")} className="section-header">
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏≠‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô {visibleSections.insured ? "‚ñ≤" : "‚ñº"}
          </h2>
          {visibleSections.insured && (
            <div className="form-grid">
              <label>
                ‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤:
                <input
                  type="text"
                  name="title"
                  value={formData.insured.title}
                  onChange={(e) => handleInputChange(e, "insured", "title")}
                />
              </label>
              <label>
                ‡∏ä‡∏∑‡πà‡∏≠:
                <input
                  type="text"
                  name="firstName"
                  value={formData.insured.firstName}
                  onChange={(e) => handleInputChange(e, "insured", "firstName")}
                />
              </label>
              <label>
                ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:
                <input
                  type="text"
                  name="lastName"
                  value={formData.insured.lastName}
                  onChange={(e) => handleInputChange(e, "insured", "lastName")}
                />
              </label>
              <label>
                ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô:
                <input
                  type="text"
                  name="idNumber"
                  value={formData.insured.idNumber}
                  onChange={(e) => handleInputChange(e, "insured", "idNumber")}
                />
              </label>
            </div>
          )}
        </section>
  
        {/* Section: ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
        <section>
          <h2 onClick={() => toggleSection("address")} className="section-header">
            ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà {visibleSections.address ? "‚ñ≤" : "‚ñº"}
          </h2>
          {visibleSections.address && (
            <div className="form-grid">
              <label>
                ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà:
                <input
                  type="text"
                  name="homeNo"
                  value={formData.address.homeNo}
                  onChange={(e) => handleInputChange(e, "address", "homeNo")}
                />
              </label>
              <label>
                ‡∏´‡∏°‡∏π‡πà:
                <input
                  type="text"
                  name="moo"
                  value={formData.address.moo}
                  onChange={(e) => handleInputChange(e, "address", "moo")}
                />
              </label>
              <label>
                ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô:
                <input
                  type="text"
                  name="mooBarn"
                  value={formData.address.mooBarn}
                  onChange={(e) => handleInputChange(e, "address", "mooBarn")}
                />
              </label>
              <label>
                ‡∏ã‡∏≠‡∏¢:
                <input
                  type="text"
                  name="soi"
                  value={formData.address.soi}
                  onChange={(e) => handleInputChange(e, "address", "soi")}
                />
              </label>
              <label>
                ‡∏ñ‡∏ô‡∏ô:
                <input
                  type="text"
                  name="road"
                  value={formData.address.road}
                  onChange={(e) => handleInputChange(e, "address", "road")}
                />
              </label>
              <label>
                ‡∏ï‡∏≥‡∏ö‡∏•:
                <input
                  type="text"
                  name="tambol"
                  value={formData.address.tambol}
                  onChange={(e) => handleInputChange(e, "address", "tambol")}
                />
              </label>
              <label>
                ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠:
                <input
                  type="text"
                  name="amphur"
                  value={formData.address.amphur}
                  onChange={(e) => handleInputChange(e, "address", "amphur")}
                />
              </label>
              <label>
                ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î:
                <input
                  type="text"
                  name="province"
                  value={formData.address.province}
                  onChange={(e) => handleInputChange(e, "address", "province")}
                />
              </label>
              <label>
                ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå:
                <input
                  type="text"
                  name="zipCode"
                  value={formData.address.zipCode}
                  onChange={(e) => handleInputChange(e, "address", "zipCode")}
                />
              </label>
            </div>
          )}
        </section>
  
        {/* Section: ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå */}
        <section>
          <h2 onClick={() => toggleSection("beneficiary")} className="section-header">
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå {visibleSections.beneficiary ? "‚ñ≤" : "‚ñº"}
          </h2>
          {visibleSections.beneficiary && (
            <div className="form-grid">
              <label>
                ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå:
                <input
                  type="text"
                  name="name"
                  value={formData.beneficiary.name}
                  onChange={(e) => handleInputChange(e, "beneficiary", "name")}
                />
              </label>
              <label>
                ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå:
                <input
                  type="text"
                  name="relationship"
                  value={formData.beneficiary.relationship}
                  onChange={(e) =>
                    handleInputChange(e, "beneficiary", "relationship")
                  }
                />
              </label>
            </div>
          )}
        </section>
  
        {/* Section: ‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå */}
        <section>
          <h2 onClick={() => toggleSection("vehicle")} className="section-header">
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå {visibleSections.vehicle ? "‚ñ≤" : "‚ñº"}
          </h2>
          {visibleSections.vehicle && (
            <div className="form-grid">
              <label>
                ‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ:
                <input
                  type="text"
                  name="licenseNo"
                  value={formData.vehicle.licenseNo}
                  onChange={(e) => handleInputChange(e, "vehicle", "licenseNo")}
                />
              </label>
              <label>
                ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô:
                <input
                  type="text"
                  name="licenseProvince"
                  value={formData.vehicle.licenseProvince}
                  onChange={(e) =>
                    handleInputChange(e, "vehicle", "licenseProvince")
                  }
                />
              </label>
              <label>
                ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏£‡∏ñ:
                <input
                  type="text"
                  name="make"
                  value={formData.vehicle.make}
                  onChange={(e) => handleInputChange(e, "vehicle", "make")}
                />
              </label>
              <label>
                ‡∏£‡∏∏‡πà‡∏ô‡∏£‡∏ñ:
                <input
                  type="text"
                  name="model"
                  value={formData.vehicle.model}
                  onChange={(e) => handleInputChange(e, "vehicle", "model")}
                />
              </label>
            </div>
          )}
        </section>
  
        {/* Section: ‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå */}
        <section>
          <h2 onClick={() => toggleSection("policy")} className="section-header">
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå {visibleSections.policy ? "‚ñ≤" : "‚ñº"}
          </h2>
          {visibleSections.policy && (
            <div className="form-grid">
              <label>
                ‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏û‡∏Ñ‡πÄ‡∏Å‡∏à:
                <input
                  type="text"
                  name="packageCode"
                  value={formData.policy.packageCode}
                  onChange={(e) => handleInputChange(e, "policy", "packageCode")}
                />
              </label>
              <label>
                ‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢‡∏£‡∏ß‡∏°:
                <input
                  type="text"
                  name="totalPremium"
                  value={formData.policy.totalPremium}
                  onChange={(e) =>
                    handleInputChange(e, "policy", "totalPremium")
                  }
                />
              </label>
            </div>
          )}
        </section>
  
        <div className="form-actions">
          <button type="submit" className="submit-btn">
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </button>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ */}
          <button
            type="button"
            className="submit-btn"
            style={{ backgroundColor: "#FF6800", marginTop: "10px" }}
            onClick={handleViewDocument}
          >
            ‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
          </button>
        </div>
      </form>
    </div>
  );
};


export default InsuranceForm;
